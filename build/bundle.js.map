{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///./src/api/_helpers/enum.js","webpack:///external \"passport\"","webpack:///external \"express\"","webpack:///./src/api/db.js","webpack:///external \"react-router-dom\"","webpack:///external \"react-router-config\"","webpack:///external \"redux\"","webpack:///external \"body-parser\"","webpack:///external \"compression\"","webpack:///external \"mongodb\"","webpack:///./src/api/authentication/tokenUtil.js","webpack:///./src/api/authentication/authentication.service.js","webpack:///external \"express-jwt\"","webpack:///./src/api/users/users.service.js","webpack:///external \"cors\"","webpack:///external \"helmet\"","webpack:///external \"morgan\"","webpack:///./src/api/_helpers/error-handler.js","webpack:///external \"react-dom/server\"","webpack:///external \"react-redux\"","webpack:///external \"serialize-javascript\"","webpack:///external \"react-helmet\"","webpack:///external \"react-twitter-auth\"","webpack:///external \"axios\"","webpack:///external \"@babel/polyfill\"","webpack:///./src/api/authentication/passportConfig.js","webpack:///external \"passport-jwt\"","webpack:///external \"passport-local\"","webpack:///external \"jsonwebtoken\"","webpack:///./src/api/users/users.controller.js","webpack:///external \"bcrypt\"","webpack:///./src/api/authentication/authorize.js","webpack:///./src/api/authentication/authentication.controller.js","webpack:///external \"webpack\"","webpack:///./src/client/App.js","webpack:///./src/client/pages/Home.js","webpack:///./src/client/pages/Login.js","webpack:///./src/client/routes.js","webpack:///./src/client/actions/index.js","webpack:///./src/client/reducers/index.js","webpack:///./src/client/reducers/usersReducer.js","webpack:///./src/server.js","webpack:///./src/helpers/renderer.js","webpack:///./src/client/store/createStore.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","role","ADMIN","USER","tokenType","ACCESS_TOKEN","REFRESH_TOKEN","accountState","ACTIVE","PENDING","SUSPENDED","DELETED","MongoClient","connect","url","dbName","done","state","db","err","client","close","result","jwt","config","generateAccessToken","sub","generateToken","generateRefreshToken","type","secret","authentication_token_secret","sign","expiresIn","subject","JSON","stringify","roles","email","password","collection","find","toArray","users","length","user","userWithoutPassword","token","remove","refresh_token","userId","old_token","new_token","deleteRequestToken","insertOne","findOne","authenticate","deleteRefreshToken","updateRefreshToken","isValidRefreshToken","Roles","ObjectID","map","u","id","_id","username","icon","account_status","joined_date","Date","friends","favorite_sorters","sorter_history","profile","about_me","links_list","share_settings","integration3rdparty","User","updateQuery","updateOne","$set","getAll","getById","createUser","updateUser","req","res","next","status","json","message","passport","JWTstrategy","Strategy","localStrategy","authService","UnauthorizedError","use","secretOrKey","jwtFromRequest","headers","authorization","replace","trim","parse","console","error","usernameField","passwordField","then","catch","express","router","Router","userService","authorize","session","sendStatus","currentUser","parseInt","params","includes","EvalSourceMapDevToolPlugin","post","generateTokens","accessToken","refreshToken","cookie","httpOnly","body","cookies","end","App","route","className","renderRoutes","routes","Home","useState","response","setResponse","setPost","onSubmit","e","preventDefault","requestOptions","method","fetch","data","log","onChange","target","component","path","exact","history","useHistory","setEmail","setPassword","authFailure","style","color","push","loginUrl","onFailure","onSuccess","requestTokenUrl","combineReducers","articles","action","payload","port","process","env","PORT","app","helmet","cors","morgan","bodyParser","urlencoded","extended","static","initialize","compression","level","filter","errorHandler","context","content","store","renderToString","location","baseUrl","Helmet","renderStatic","title","toString","meta","link","serialize","getState","renderer","createStore","reducers","notFound","send","exit","listen","on"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 36);\n","module.exports = require(\"react\");","const role = {\r\n    ADMIN: 'Admin',\r\n    USER: 'User'\r\n};\r\n\r\nconst tokenType = {\r\n    ACCESS_TOKEN: 'ACCESS_TOKEN',\r\n    REFRESH_TOKEN: 'REFRESH_TOKEN'\r\n};\r\n\r\nconst accountState = {\r\n    ACTIVE: 'Active',\r\n    PENDING: 'Pending',\r\n    SUSPENDED: 'Suspended',\r\n    DELETED: 'Deleted'\r\n};\r\n\r\nmodule.exports = {\r\n    role,\r\n    tokenType,\r\n    accountState\r\n};\r\n","module.exports = require(\"passport\");","module.exports = require(\"express\");","const MongoClient = require('mongodb').MongoClient\r\n\r\nmodule.exports = {\r\n  connect,\r\n  get,\r\n  close\r\n}\r\n\r\nconst state = {\r\n  db: null,\r\n}\r\n\r\nfunction connect(url, dbName, done) {\r\n  if (state.db) return done()\r\n\r\n  MongoClient.connect(url, function (err, client) {\r\n    if (err) return done(err);\r\n    state.db = client.db(dbName);\r\n    done();\r\n  })\r\n}\r\n\r\nfunction get() {\r\n  return state.db;\r\n}\r\n\r\nfunction close(done) {\r\n  if (state.db) {\r\n    state.db.close(function (err, result) {\r\n      state.db = null;\r\n      done(err);\r\n    })\r\n  }\r\n}","module.exports = require(\"react-router-dom\");","module.exports = require(\"react-router-config\");","module.exports = require(\"redux\");","module.exports = require(\"body-parser\");","module.exports = require(\"compression\");","module.exports = require(\"mongodb\");","const jwt = require('jsonwebtoken');\r\nconst config = require('./../config.json');\r\nconst { tokenType } = require('./../_helpers/enum');\r\n//const { encrypt, decrypt } = require('./../_helpers/encryptionUtil');\r\n\r\nconst access_token_expiration = 1800;\r\nconst refresh_token_expiration = '30d';\r\n\r\nexport const generateAccessToken = (sub) => {\r\n    return generateToken(sub, tokenType.ACCESS_TOKEN);\r\n};\r\n\r\nexport const generateRefreshToken = (sub) => {\r\n    return generateToken(sub, tokenType.REFRESH_TOKEN);\r\n};\r\n\r\nconst generateToken = (sub, type) => {\r\n    const secret = config.authentication_token_secret;\r\n    //if encrypting, do it here\r\n    return jwt.sign({ type }, secret, {\r\n        expiresIn: access_token_expiration,\r\n        subject: JSON.stringify(sub)\r\n    });\r\n};\r\n\r\n//only needed if decrypting, do it inside verify\r\n// export const getTokenData = (token) => {\r\n//     return jwt.verify(token, config.authentication_token_secret);\r\n// };\r\n","const Roles = require('../_helpers/enum').roles;\r\nconst db = require('../db');\r\n\r\nmodule.exports = {\r\n    authenticate,\r\n    deleteRefreshToken,\r\n    updateRefreshToken,\r\n    isValidRefreshToken\r\n};\r\n\r\nasync function authenticate(email, password) {\r\n    const users = await db\r\n        .get()\r\n        .collection('users')\r\n        .find({\r\n            email: email,\r\n            password: password\r\n        })\r\n        .toArray();\r\n    if (users.length >= 1) {\r\n        const user = users[0];\r\n        const { password, ...userWithoutPassword } = user;\r\n        return userWithoutPassword;\r\n    }\r\n    return null;\r\n}\r\n\r\nasync function deleteRefreshToken(token) {\r\n    await db.get().collection('refresh_tokens').remove({ refresh_token: token });\r\n}\r\n\r\nasync function updateRefreshToken(userId, old_token, new_token) {\r\n    if (old_token) await deleteRequestToken(old_token);\r\n    await db.get().collection('refresh_tokens').insertOne({ userId: userId, refresh_token: new_token });\r\n}\r\n\r\nasync function isValidRefreshToken(userId, refresh_token) {\r\n    const userToken = await db.get().collection('refresh_tokens').findOne({ userId: userId, refresh_token: refresh_token });\r\n    if (!userToken) return false;\r\n    return true;\r\n}\r\n","module.exports = require(\"express-jwt\");","const Roles = require('../_helpers/enum').role;\r\nconst db = require('./../db');\r\nconst bycrpt = require('bcrypt');\r\nconst ObjectID = require('mongodb').ObjectID;\r\n\r\nconst saltRounds = 10;\r\n\r\nmodule.exports = {\r\n    getAll,\r\n    getById,\r\n    createUser,\r\n    updateUser\r\n};\r\n\r\nasync function getAll() {\r\n    let users = await db.get().collection('users').find().toArray();\r\n    users.map((u) => {\r\n        const { password, ...userWithoutPassword } = u;\r\n        return userWithoutPassword;\r\n    });\r\n    return users;\r\n}\r\n\r\nasync function getById(id) {\r\n    const user = await db\r\n        .get()\r\n        .collection('users')\r\n        .findOne({ _id: new ObjectID(id) });\r\n    if (!user) return;\r\n    const { password, ...userWithoutPassword } = user;\r\n    return userWithoutPassword;\r\n}\r\n\r\nasync function getUserByEmail(email) {\r\n    const users = await db\r\n        .get()\r\n        .collection('users')\r\n        .find({\r\n            email: email\r\n        })\r\n        .toArray();\r\n    if (users.length >= 1) {\r\n        const user = users[0];\r\n        const { password, ...userWithoutPassword } = user;\r\n        return userWithoutPassword;\r\n    }\r\n    return null;\r\n}\r\n\r\nasync function createUser(username, email, password, icon, account_status) {\r\n    db.get()\r\n        .collection('users')\r\n        .insertOne({\r\n            joined_date: new Date(),\r\n            friends: [],\r\n            favorite_sorters: [],\r\n            sorter_history: [],\r\n            profile: {\r\n                username: username,\r\n                about_me: '',\r\n                links_list: [],\r\n                share_settings: {},\r\n                icon: icon\r\n            },\r\n            email: email,\r\n            password: password,\r\n            integration3rdparty: [],\r\n            role: Roles.User,\r\n            account_status: account_status\r\n        });\r\n}\r\n\r\nasync function updateUser(userId, updateQuery) {\r\n    db.get().collection('users').updateOne({ _id: userId }, { $set: updateQuery });\r\n}\r\n","module.exports = require(\"cors\");","module.exports = require(\"helmet\");","module.exports = require(\"morgan\");","module.exports = errorHandler;\r\n\r\nfunction errorHandler(err, req, res, next) {\r\n    if (typeof err === 'string') {\r\n        // custom application error\r\n        return res.status(400).json({ message: err });\r\n    }\r\n\r\n    if (err.name === 'UnauthorizedError') {\r\n        // jwt authentication error\r\n        return res.status(401).json({ message: err.message && err.message.length ? err.message : 'Invalid Token' });\r\n    }\r\n\r\n    // default to 500 server error\r\n    return res.status(500).json({ message: err.message });\r\n}\r\n","module.exports = require(\"react-dom/server\");","module.exports = require(\"react-redux\");","module.exports = require(\"serialize-javascript\");","module.exports = require(\"react-helmet\");","module.exports = require(\"react-twitter-auth\");","module.exports = require(\"axios\");","module.exports = require(\"@babel/polyfill\");","const passport = require('passport');\r\nconst JWTstrategy = require('passport-jwt').Strategy;\r\nconst localStrategy = require('passport-local').Strategy;\r\nconst { tokenType } = require('../_helpers/enum');\r\nconst { authentication_token_secret } = require('../config.json');\r\nconst tokenUtil = require('./tokenUtil');\r\nconst authService = require('../authentication/authentication.service');\r\nconst { UnauthorizedError } = require('express-jwt');\r\n\r\n//token auth\r\npassport.use(\r\n    'jwt',\r\n    new JWTstrategy(\r\n        {\r\n            //secret we used to sign our JWT\r\n            secretOrKey: authentication_token_secret,\r\n            //we expect the user to send the access token in the header\r\n            jwtFromRequest: (req) => {\r\n                if (!req.headers.authorization) throw new UnauthorizedError(401, { message: 'Access token not provided.' });\r\n                const tokenFromHeader = req.headers.authorization.replace('Bearer ', '').trim();\r\n                return tokenFromHeader;\r\n            }\r\n        },\r\n        (token, done) => {\r\n            try {\r\n                if (token.type !== tokenType.ACCESS_TOKEN) {\r\n                    throw new UnauthorizedError(401, { message: 'Access token not provided.' });\r\n                }\r\n                done(null, JSON.parse(token.sub));\r\n            } catch (err) {\r\n                console.error('Token is not valid:', err.message);\r\n                done(err);\r\n            }\r\n        }\r\n    )\r\n);\r\n\r\n//local auth\r\npassport.use(\r\n    'login',\r\n    new localStrategy(\r\n        {\r\n            usernameField: 'email',\r\n            passwordField: 'password'\r\n        },\r\n        (email, password, done) => {\r\n            authService\r\n                .authenticate(email, password)\r\n                .then((user) => {\r\n                    if (user) {\r\n                        return done(null, user, { message: 'Login successful.' });\r\n                    } else return done(null, false, { message: 'Username or password is incorrect.' });\r\n                })\r\n                .catch((err) => done(err));\r\n        }\r\n    )\r\n);\r\n","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"jsonwebtoken\");","const express = require('express');\r\nconst passport = require('passport');\r\nconst router = express.Router();\r\nconst userService = require('./users.service');\r\nconst authorize = require('../authentication/authorize');\r\nconst Roles = require('../_helpers/enum').role;\r\n\r\n// routes\r\nrouter.get('/', passport.authenticate('jwt', { session: false }), authorize(Roles.ADMIN), getAll); // admin only\r\nrouter.get('/self', passport.authenticate('jwt', { session: false }), getSelf); // all authenticated users\r\nrouter.get('/:id', passport.authenticate('jwt', { session: false }), authorize(Roles.ADMIN), getById); // admin only\r\nmodule.exports = router;\r\n\r\nfunction getAll(req, res, next) {\r\n    userService\r\n        .getAll()\r\n        .then((users) => res.json(users))\r\n        .catch((err) => next(err));\r\n}\r\n\r\nfunction getSelf(req, res, next) {\r\n    userService\r\n        .getById(req.user.id)\r\n        .then((user) => (user ? res.json(user) : res.sendStatus(404)))\r\n        .catch((err) => next(err));\r\n}\r\n\r\nfunction getById(req, res, next) {\r\n    const currentUser = req.user;\r\n    const id = parseInt(req.params.id);\r\n    // only allow admins to access other user records\r\n    if (currentUser.role !== Roles.ADMIN) {\r\n        return res.status(401).json({ message: 'Unauthorized' });\r\n    }\r\n\r\n    userService\r\n        .getById(req.params.id)\r\n        .then((user) => (user ? res.json(user) : res.sendStatus(404)))\r\n        .catch((err) => next(err));\r\n}\r\n","module.exports = require(\"bcrypt\");","module.exports = authorize;\r\n\r\nfunction authorize(roles = []) {\r\n    // roles param can be a single role string (e.g. Role.User or 'User')\r\n    // or an array of roles (e.g. [Role.Admin, Role.User] or ['Admin', 'User'])\r\n    if (typeof roles === 'string') {\r\n        roles = [roles];\r\n    }\r\n\r\n    return [\r\n        // authorize based on user role\r\n        (req, res, next) => {\r\n            if (roles.length && !roles.includes(req.user.role)) {\r\n                // user's role is not authorized\r\n                return res.status(401).json({ message: 'Unauthorized' });\r\n            }\r\n            // authentication and authorization successful\r\n            next();\r\n        }\r\n    ];\r\n}\r\n","const express = require('express');\r\nconst passport = require('passport');\r\nconst router = express.Router();\r\nconst userService = require('./../users/users.service');\r\nconst authService = require('./authentication.service');\r\nconst { generateAccessToken, generateRefreshToken } = require('./tokenUtil');\r\nconst { UnauthorizedError } = require('express-jwt');\r\nconst { EvalSourceMapDevToolPlugin } = require('webpack');\r\n\r\n//routes\r\nrouter.post('/register', localSignUp);\r\nrouter.post('/login', passport.authenticate('login', { session: false }), login);\r\nrouter.post('/refresh-token', refreshToken);\r\nrouter.post('/logout', logout);\r\n//router.post('/login-twitter-request', twitterLoginReq);\r\n//router.post('/login-twitter-access', twitterLoginAcc);\r\nmodule.exports = router;\r\n\r\nconst generateTokens = async (res, user, old_token) => {\r\n    const accessToken = generateAccessToken({ id: user._id, role: user.role });\r\n    const refreshToken = generateRefreshToken({ id: user._id, role: user.role });\r\n    //invalidate old token and save the new one\r\n    await authService.updateRefreshToken(user._id, old_token, refreshToken);\r\n    res.cookie('refresh_token', refreshToken, { httpOnly: true });\r\n    res.status(200).json({ accessToken, user });\r\n};\r\n\r\nasync function localSignUp(req, res, next) {\r\n    const { username, email, password } = req.body;\r\n    userService\r\n        .createUser(username, email, password, '', 'Active')\r\n        .then(() => res.status(200).json({ message: 'Sign up successful.' }))\r\n        .catch((err) => next(err));\r\n}\r\n\r\nasync function login(req, res, next) {\r\n    try {\r\n        const user = req.user;\r\n        generateTokens(res, user, null);\r\n    } catch (err) {\r\n        next(err);\r\n    }\r\n}\r\n\r\nasync function refreshToken(req, res, next) {\r\n    try {\r\n        const token = req.cookies.refresh_token;\r\n        const validToken = await authService.isValidRefreshToken(token.userId, token);\r\n        if (validToken) {\r\n            const user = await userService.getById(userId);\r\n            generateTokens(res, user, token);\r\n        } else throw new UnauthorizedError(401, { message: 'Invalid refresh token.' });\r\n    } catch (error) {\r\n        next(error);\r\n    }\r\n}\r\n\r\nasync function logout(req, res) {\r\n    try {\r\n        //invalidate current refresh token if it exists\r\n        if (req.cookies.refresh_token) await authService.deleteRefreshToken(req.cookies.refresh_token);\r\n        res.cookie('refresh_token', '', { httpOnly: true });\r\n        res.status(200).end();\r\n    } catch (error) {\r\n        next(error);\r\n    }\r\n}\r\n","module.exports = require(\"webpack\");","import React from 'react';\r\nimport { renderRoutes } from 'react-router-config';\r\n\r\nconst App = ({ route }) => {\r\n    return (\r\n        <div className=\"container\">\r\n            {renderRoutes(route.routes)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React, { useState } from 'react';\r\n\r\nconst Home = () => {\r\n\r\n    const [response, setResponse] = useState('');\r\n    const [post, setPost] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ message: post })\r\n        };\r\n        fetch('/api/test', requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => setResponse(data.message) + ' in client')\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <header className=\"Home-header\">\r\n                <p>\r\n                    Server response below:\r\n          </p>\r\n            </header>\r\n            <p>{response}</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <p>\r\n                    <strong>Post to Server:</strong>\r\n                </p>\r\n                <input\r\n                    type=\"text\"\r\n                    value={post}\r\n                    onChange={e => setPost(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TwitterLogin from 'react-twitter-auth';\r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const authFailure = false;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ email, password })\r\n        };\r\n        fetch('/api/users/login', requestOptions)\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n            .catch(err => { console.log(err); authFailure = true; });\r\n        history.push('/');\r\n    }\r\n\r\n    const handleTwitterRes = (res) => {\r\n        res\r\n            ? history.push('/')\r\n            : authFailure = true;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <header className=\"Home-header\">\r\n                <p>\r\n                    User login test page\r\n                </p>\r\n                {authFailure ? <p style={{ color: 'red' }}>authentication failed</p> : ''}\r\n            </header>\r\n            <form onSubmit={handleSubmit}>\r\n                <p>\r\n                    <strong>Login:</strong>\r\n                </p>\r\n                <input\r\n                    type=\"text\"\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n            <div>test</div>\r\n            <TwitterLogin loginUrl=\"/api/users/login-twitter-access\"\r\n                onFailure={e => console.log(e)} onSuccess={e => console.log(e)}\r\n                requestTokenUrl=\"/api/users/login-twitter-request\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import App from './App';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\n\nconst routes = [\n  {\n    component: App,\n    routes: [\n      {\n        component: Home,\n        path: '/',\n        exact: true\n      },\n      {\n        component: Login,\n        path: '/login',\n        exact: true\n      }\n    ]\n  }\n];\n\nexport default routes;","import axios from 'axios';\r\n\r\nexport const FETCH_ARTICLES = 'fetch_articles';\r\n\r\nexport const fetchArticles = source => async dispatch => {\r\n    let url;\r\n    if (source) {\r\n        url = `https://newsapi.org/v2/top-headlines?sources=`;\r\n    } else {\r\n        url = `https://newsapi.org/v2/top-headlines?country=us&apiKey=`;\r\n    }\r\n\r\n    const res = await axios.get(url);\r\n\r\n    dispatch({\r\n        type: FETCH_ARTICLES,\r\n        payload: res.data.articles\r\n    });\r\n};","import { combineReducers } from 'redux';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n    articles: usersReducer\r\n});","import { FETCH_ARTICLES } from '../actions/index';\r\n\r\nexport default (state = [], action) => {\r\n    switch (action.type) {\r\n        case FETCH_ARTICLES:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","/* eslint-disable no-unused-vars */\r\nimport '@babel/polyfill';\r\nimport express from 'express';\r\nimport React from 'react';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport helmet from 'helmet';\r\nimport morgan from 'morgan';\r\nimport db from './api/db';\r\nimport errorHandler from './api/_helpers/error-handler';\r\n//import { matchRoutes } from 'react-router-config';\r\nimport compression from 'compression';\r\nimport renderer from './helpers/renderer';\r\nimport createStore from './client/store/createStore';\r\nimport passport from 'passport';\r\nrequire('./api/authentication/passportConfig');\r\n//import Routes from './client/Routes';\r\n\r\nconst port = process.env.PORT || 3000;\r\nconst app = express();\r\n\r\nfunction shouldCompress(req, res) {\r\n    if (req.headers['x-no-compression']) return false;\r\n    return compression.filter(req, res);\r\n}\r\n\r\napp.use(helmet());\r\napp.use(cors());\r\napp.use(morgan('combined')); //logging http requests\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\napp.use(express.static('public'));\r\napp.use(passport.initialize());\r\n\r\napp.use(\r\n    compression({\r\n        level: 2, // set compression level from 1 to 9 (6 by default)\r\n        filter: shouldCompress // set predicate to determine whether to compress\r\n    })\r\n);\r\n\r\n// api routes\r\napp.post('/api/test', (req, res) => res.json({ message: req.body.message + ' from server' }));\r\napp.use('/api/users', require('./api/users/users.controller'));\r\napp.use('/api/auth', require('./api/authentication/authentication.controller'));\r\n\r\n// global error handler\r\napp.use(errorHandler);\r\n\r\n// let router handle routes for server side rendering\r\napp.use(/\\/((?!api).)*/, (req, res) => {\r\n    // We create store before rendering html\r\n    const store = createStore();\r\n\r\n    const context = {};\r\n    const content = renderer(req, store, context);\r\n\r\n    if (context.notFound) {\r\n        res.status(404);\r\n    }\r\n\r\n    res.send(content);\r\n});\r\n\r\n//connect to database\r\ndb.connect('mongodb://localhost:27017/', 'sorterGenerator', function (err) {\r\n    if (err) {\r\n        console.log('Unable to connect to Mongo.');\r\n        process.exit(1);\r\n    } else {\r\n        //start server\r\n        app.listen(port, function () {\r\n            console.log('Listening on port 3000...');\r\n        });\r\n        //clean database on exit\r\n        process.on('exit', () => {\r\n            db.close();\r\n        });\r\n    }\r\n});\r\n","import React from 'react';\r\nimport { renderToString } from 'react-dom/server';\r\nimport { StaticRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { renderRoutes } from 'react-router-config';\r\nimport serialize from 'serialize-javascript';\r\nimport { Helmet } from 'react-helmet';\r\nimport routes from '../client/routes';\r\n\r\nexport default (req, store, context) => {\r\n  const content = renderToString(\r\n    <Provider store={store}>\r\n      <StaticRouter location={req.baseUrl} context={context}>\r\n        <div>{renderRoutes(routes)}</div>\r\n      </StaticRouter>\r\n    </Provider>\r\n  );\r\n  const helmet = Helmet.renderStatic();\r\n  return `<!DOCTYPE html>\r\n            <head>\r\n                ${helmet.title.toString()}\r\n                ${helmet.meta.toString()}\r\n                ${helmet.link.toString()}\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\r\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n            </head>\r\n            <body>\r\n                <div id=\"app\">${content}</div>\r\n                <script>\r\n                    window.__PRELOADED_STATE__ = ${serialize(store.getState()).replace(\r\n    /</g,\r\n    '\\\\u003c'\r\n  )}\r\n                </script>\r\n                <script src=\"/bundle.js\"></script>\r\n                <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\r\n            </body>\r\n    </html>`;\r\n};","import { createStore } from 'redux';\r\nimport reducers from '../reducers';\r\n\r\nexport default () => {\r\n    const store = createStore(reducers, {});\r\n    return store;\r\n};\r\n"],"sourceRoot":""}